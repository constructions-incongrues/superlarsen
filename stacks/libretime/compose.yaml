services:
  postgres:
    image: postgres:15
    volumes:
      - /mnt/superlarsen/libretime/postgres:/var/lib/postgresql/data
    labels:
      restic-compose-backup.postgres: true
      restic-compose-backup.volumes: true
    healthcheck:
      test: pg_isready -U libretime
    env_file: .env
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.13-alpine
    healthcheck:
      test: nc -z 127.0.0.1 5672
    env_file: .env
    restart: unless-stopped

  playout:
    image: ghcr.io/libretime/libretime-playout:${LIBRETIME_VERSION:-latest}
    init: true
    ulimits:
      nofile: 1024
    depends_on:
      - rabbitmq
    volumes:
      - ${LIBRETIME_CONFIG_FILEPATH:-./config.yml}:/etc/libretime/config.yml:ro
      - /mnt/superlarsen/libretime/playout:/app
    labels:
      restic-compose-backup.volumes: true=label
    environment:
      LIBRETIME_GENERAL_PUBLIC_URL: http://nginx:8080
    networks:
      - default
      - smtp
    env_file: .env
    restart: unless-stopped

  liquidsoap:
    image: ghcr.io/libretime/libretime-playout:${LIBRETIME_VERSION:-latest}
    command: /usr/local/bin/libretime-liquidsoap
    init: true
    ulimits:
      nofile: 1024
    ports:
      - 8001:8001
      - 8002:8002
    depends_on:
      - rabbitmq
    volumes:
      - ${LIBRETIME_CONFIG_FILEPATH:-./config.yml}:/etc/libretime/config.yml:ro
      - /mnt/superlarsen/libretime/playout:/app
    environment:
      LIBRETIME_GENERAL_PUBLIC_URL: http://nginx:8080
    networks:
      - default
    env_file: .env
    restart: unless-stopped

  analyzer:
    image: ghcr.io/libretime/libretime-analyzer:${LIBRETIME_VERSION:-latest}
    init: true
    ulimits:
      nofile: 1024
    depends_on:
      - rabbitmq
    env_file: .env
    volumes:
      - ${LIBRETIME_CONFIG_FILEPATH:-./config.yml}:/etc/libretime/config.yml:ro
      - /mnt/superlarsen/libretime/storage:/srv/libretime
    environment:
      LIBRETIME_GENERAL_PUBLIC_URL: http://nginx:8080
    restart: unless-stopped

  worker:
    image: ghcr.io/libretime/libretime-worker:${LIBRETIME_VERSION:-latest}
    init: true
    ulimits:
      nofile: 1024
    depends_on:
      - rabbitmq
    volumes:
      - ${LIBRETIME_CONFIG_FILEPATH:-./config.yml}:/etc/libretime/config.yml:ro
    environment:
      LIBRETIME_GENERAL_PUBLIC_URL: http://nginx:8080
    networks:
      - default
      - smtp
    env_file: .env
    restart: unless-stopped

  api:
    image: ghcr.io/libretime/libretime-api:${LIBRETIME_VERSION:-latest}
    init: true
    ulimits:
      nofile: 1024
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ${LIBRETIME_CONFIG_FILEPATH:-./config.yml}:/etc/libretime/config.yml:ro
      - /mnt/superlarsen/libretime/storage:/srv/libretime
    networks:
      - default
      - smtp
    env_file: .env
    restart: unless-stopped

  legacy:
    image: ghcr.io/libretime/libretime-legacy:${LIBRETIME_VERSION:-latest}
    init: true
    ulimits:
      nofile: 1024
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ${LIBRETIME_CONFIG_FILEPATH:-./config.yml}:/etc/libretime/config.yml:ro
      - /mnt/superlarsen/libretime/storage:/srv/libretime
    labels:
      restic-compose-backup.volumes: true
    networks:
      - default
      - smtp
    env_file: .env
    restart: unless-stopped

  nginx:
    image: ghcr.io/libretime/libretime-nginx:${LIBRETIME_VERSION:-latest}
    depends_on:
      - legacy
    volumes:
      - /mnt/superlarsen/libretime/storage:/srv/libretime:ro
    networks:
      - caddy
      - default
    labels:
      caddy: libretime.superlarsen.fr
      caddy.reverse_proxy: "{{upstreams 8080}}"
    env_file: .env
    restart: unless-stopped

  icecast:
    image: ghcr.io/libretime/icecast:2.4.4
    networks:
      - caddy
      - default
    labels:
      caddy: icecast.superlarsen.fr
      caddy.reverse_proxy: "{{upstreams 8000}}"
    env_file: .env
    restart: unless-stopped

  backup:
    image: zettaio/restic-compose-backup:0.7.1
    env_file: .env
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./cache:/cache

networks:
  caddy:
    external: true
  smtp:
    external: true